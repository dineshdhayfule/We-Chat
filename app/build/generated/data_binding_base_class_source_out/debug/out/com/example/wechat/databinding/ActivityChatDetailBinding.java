// Generated by view binder compiler. Do not edit!
package com.example.wechat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wechat.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChatDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout RelativeLayout;

  @NonNull
  public final ImageView attachment;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final ImageView camera;

  @NonNull
  public final RecyclerView chatRecyclerView;

  @NonNull
  public final ImageView delete;

  @NonNull
  public final EditText enterMessage;

  @NonNull
  public final TextView lastSeen;

  @NonNull
  public final RelativeLayout linear;

  @NonNull
  public final ImageView menu;

  @NonNull
  public final LinearLayout messageInputLayout;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView repliedToMessage;

  @NonNull
  public final TextView repliedToSender;

  @NonNull
  public final LinearLayout replyLayout;

  @NonNull
  public final LinearLayout replyLayoutContainer;

  @NonNull
  public final ImageView send;

  @NonNull
  public final FrameLayout sendLayout;

  @NonNull
  public final Toolbar toolBar;

  @NonNull
  public final TextView typingIndicator;

  @NonNull
  public final TextView userName;

  private ActivityChatDetailBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout RelativeLayout, @NonNull ImageView attachment,
      @NonNull ImageView backArrow, @NonNull ImageView camera,
      @NonNull RecyclerView chatRecyclerView, @NonNull ImageView delete,
      @NonNull EditText enterMessage, @NonNull TextView lastSeen, @NonNull RelativeLayout linear,
      @NonNull ImageView menu, @NonNull LinearLayout messageInputLayout,
      @NonNull CircleImageView profileImage, @NonNull TextView repliedToMessage,
      @NonNull TextView repliedToSender, @NonNull LinearLayout replyLayout,
      @NonNull LinearLayout replyLayoutContainer, @NonNull ImageView send,
      @NonNull FrameLayout sendLayout, @NonNull Toolbar toolBar, @NonNull TextView typingIndicator,
      @NonNull TextView userName) {
    this.rootView = rootView;
    this.RelativeLayout = RelativeLayout;
    this.attachment = attachment;
    this.backArrow = backArrow;
    this.camera = camera;
    this.chatRecyclerView = chatRecyclerView;
    this.delete = delete;
    this.enterMessage = enterMessage;
    this.lastSeen = lastSeen;
    this.linear = linear;
    this.menu = menu;
    this.messageInputLayout = messageInputLayout;
    this.profileImage = profileImage;
    this.repliedToMessage = repliedToMessage;
    this.repliedToSender = repliedToSender;
    this.replyLayout = replyLayout;
    this.replyLayoutContainer = replyLayoutContainer;
    this.send = send;
    this.sendLayout = sendLayout;
    this.toolBar = toolBar;
    this.typingIndicator = typingIndicator;
    this.userName = userName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChatDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChatDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chat_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChatDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout RelativeLayout = (RelativeLayout) rootView;

      id = R.id.attachment;
      ImageView attachment = ViewBindings.findChildViewById(rootView, id);
      if (attachment == null) {
        break missingId;
      }

      id = R.id.backArrow;
      ImageView backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.camera;
      ImageView camera = ViewBindings.findChildViewById(rootView, id);
      if (camera == null) {
        break missingId;
      }

      id = R.id.chatRecyclerView;
      RecyclerView chatRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (chatRecyclerView == null) {
        break missingId;
      }

      id = R.id.delete;
      ImageView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.enterMessage;
      EditText enterMessage = ViewBindings.findChildViewById(rootView, id);
      if (enterMessage == null) {
        break missingId;
      }

      id = R.id.last_seen;
      TextView lastSeen = ViewBindings.findChildViewById(rootView, id);
      if (lastSeen == null) {
        break missingId;
      }

      id = R.id.linear;
      RelativeLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.menu;
      ImageView menu = ViewBindings.findChildViewById(rootView, id);
      if (menu == null) {
        break missingId;
      }

      id = R.id.message_input_layout;
      LinearLayout messageInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (messageInputLayout == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.replied_to_message;
      TextView repliedToMessage = ViewBindings.findChildViewById(rootView, id);
      if (repliedToMessage == null) {
        break missingId;
      }

      id = R.id.replied_to_sender;
      TextView repliedToSender = ViewBindings.findChildViewById(rootView, id);
      if (repliedToSender == null) {
        break missingId;
      }

      id = R.id.reply_layout;
      LinearLayout replyLayout = ViewBindings.findChildViewById(rootView, id);
      if (replyLayout == null) {
        break missingId;
      }

      id = R.id.reply_layout_container;
      LinearLayout replyLayoutContainer = ViewBindings.findChildViewById(rootView, id);
      if (replyLayoutContainer == null) {
        break missingId;
      }

      id = R.id.send;
      ImageView send = ViewBindings.findChildViewById(rootView, id);
      if (send == null) {
        break missingId;
      }

      id = R.id.send_layout;
      FrameLayout sendLayout = ViewBindings.findChildViewById(rootView, id);
      if (sendLayout == null) {
        break missingId;
      }

      id = R.id.toolBar;
      Toolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.typing_indicator;
      TextView typingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (typingIndicator == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new ActivityChatDetailBinding((RelativeLayout) rootView, RelativeLayout, attachment,
          backArrow, camera, chatRecyclerView, delete, enterMessage, lastSeen, linear, menu,
          messageInputLayout, profileImage, repliedToMessage, repliedToSender, replyLayout,
          replyLayoutContainer, send, sendLayout, toolBar, typingIndicator, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
