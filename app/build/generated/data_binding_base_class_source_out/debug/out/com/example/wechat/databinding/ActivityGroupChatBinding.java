// Generated by view binder compiler. Do not edit!
package com.example.wechat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wechat.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupChatBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView attachment;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final ImageView camera;

  @NonNull
  public final ImageView cancelReply;

  @NonNull
  public final RecyclerView chatRecyclerView;

  @NonNull
  public final ImageView delete;

  @NonNull
  public final LinearLayout deleteLayout;

  @NonNull
  public final EditText enterMessage;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final ImageView menu;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final TextView repliedToMessage;

  @NonNull
  public final TextView repliedToSender;

  @NonNull
  public final RelativeLayout replyLayout;

  @NonNull
  public final FloatingActionButton send;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView typingIndicator;

  @NonNull
  public final TextView userName;

  private ActivityGroupChatBinding(@NonNull RelativeLayout rootView, @NonNull ImageView attachment,
      @NonNull ImageView backArrow, @NonNull ImageView camera, @NonNull ImageView cancelReply,
      @NonNull RecyclerView chatRecyclerView, @NonNull ImageView delete,
      @NonNull LinearLayout deleteLayout, @NonNull EditText enterMessage,
      @NonNull LinearLayout linear, @NonNull ImageView menu, @NonNull CircleImageView profileImage,
      @NonNull RelativeLayout relativeLayout, @NonNull TextView repliedToMessage,
      @NonNull TextView repliedToSender, @NonNull RelativeLayout replyLayout,
      @NonNull FloatingActionButton send, @NonNull Toolbar toolbar,
      @NonNull TextView typingIndicator, @NonNull TextView userName) {
    this.rootView = rootView;
    this.attachment = attachment;
    this.backArrow = backArrow;
    this.camera = camera;
    this.cancelReply = cancelReply;
    this.chatRecyclerView = chatRecyclerView;
    this.delete = delete;
    this.deleteLayout = deleteLayout;
    this.enterMessage = enterMessage;
    this.linear = linear;
    this.menu = menu;
    this.profileImage = profileImage;
    this.relativeLayout = relativeLayout;
    this.repliedToMessage = repliedToMessage;
    this.repliedToSender = repliedToSender;
    this.replyLayout = replyLayout;
    this.send = send;
    this.toolbar = toolbar;
    this.typingIndicator = typingIndicator;
    this.userName = userName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachment;
      ImageView attachment = ViewBindings.findChildViewById(rootView, id);
      if (attachment == null) {
        break missingId;
      }

      id = R.id.backArrow;
      ImageView backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.camera;
      ImageView camera = ViewBindings.findChildViewById(rootView, id);
      if (camera == null) {
        break missingId;
      }

      id = R.id.cancel_reply;
      ImageView cancelReply = ViewBindings.findChildViewById(rootView, id);
      if (cancelReply == null) {
        break missingId;
      }

      id = R.id.chatRecyclerView;
      RecyclerView chatRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (chatRecyclerView == null) {
        break missingId;
      }

      id = R.id.delete;
      ImageView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.delete_layout;
      LinearLayout deleteLayout = ViewBindings.findChildViewById(rootView, id);
      if (deleteLayout == null) {
        break missingId;
      }

      id = R.id.enterMessage;
      EditText enterMessage = ViewBindings.findChildViewById(rootView, id);
      if (enterMessage == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.menu;
      ImageView menu = ViewBindings.findChildViewById(rootView, id);
      if (menu == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      RelativeLayout relativeLayout = (RelativeLayout) rootView;

      id = R.id.replied_to_message;
      TextView repliedToMessage = ViewBindings.findChildViewById(rootView, id);
      if (repliedToMessage == null) {
        break missingId;
      }

      id = R.id.replied_to_sender;
      TextView repliedToSender = ViewBindings.findChildViewById(rootView, id);
      if (repliedToSender == null) {
        break missingId;
      }

      id = R.id.reply_layout;
      RelativeLayout replyLayout = ViewBindings.findChildViewById(rootView, id);
      if (replyLayout == null) {
        break missingId;
      }

      id = R.id.send;
      FloatingActionButton send = ViewBindings.findChildViewById(rootView, id);
      if (send == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.typingIndicator;
      TextView typingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (typingIndicator == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new ActivityGroupChatBinding((RelativeLayout) rootView, attachment, backArrow, camera,
          cancelReply, chatRecyclerView, delete, deleteLayout, enterMessage, linear, menu,
          profileImage, relativeLayout, repliedToMessage, repliedToSender, replyLayout, send,
          toolbar, typingIndicator, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
